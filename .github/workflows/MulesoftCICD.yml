name: Mulesoft CI & CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Cache Maven Dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build Maven
      - name: Build Maven
        run: mvn --batch-mode package "-DencryptionKey=${{ secrets.ENCRYPTION_KEY }}"

      # Setup folder, move jar, then upload artifact
      - run: mkdir staging && cp target/*.jar staging
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - shell: bash
        env:
          repository: ${{ GITHUB_REPOSITORY }}
          credentials: ${{ secrets.ANYPOINT_CREDENTIALS_FILE }}
          encryption: ${{ secrets.ENCRYPTION_KEY }}
        run: |
# Download anypoint-cli to the agent
sudo npm i -g anypoint-cli@latest

# Setup credentials file on the agent
mkdir ~/.anypoint
echo "$credentials" >> credentials
cp ./credentials ~/.anypoint/

# Extract the extact jar name, which anypoint-cli requires
jarName=$(ls target/*.jar)

# Extract the repo name
repoName=${repository##*/}

set "--property encryptionKey:${encryption}" "'${repoName}'" "'${PWD}/${jarName}'"

# Deploy command fails if the deployment already exists, so propagate to modfiy command in that case
anypoint-cli runtime-mgr cloudhub-application deploy "$@" ||
anypoint-cli runtime-mgr cloudhub-application modify "$@"
